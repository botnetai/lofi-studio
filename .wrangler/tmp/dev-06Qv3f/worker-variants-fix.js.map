{
  "version": 3,
  "sources": ["../bundle-6UpQyK/strip-cf-connecting-ip-header.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../worker-variants-fix.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-6UpQyK/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-6UpQyK/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/jeremycai/Projects/lofi-music/lofi-studio/.wrangler/tmp/dev-06Qv3f",
  "sourcesContent": ["function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\n    \"/\",\n    url.charCodeAt(9) === 58 ? 13 : 8\n  );\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"json\");\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    this.header(\"Location\", String(location));\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (!part) {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "import { Hono } from 'hono'\nimport { cors } from 'hono/cors'\n\ntype Env = {\n  DB: D1Database\n  R2: R2Bucket\n  AI: any\n  GOAPI_KEY: string\n  UDIOAPI_KEY: string\n  FAL_KEY: string\n  JSON2VIDEO_KEY: string\n}\n\nconst app = new Hono<{ Bindings: Env }>()\n\n// Enable CORS for all routes\napp.use('*', cors({\n  origin: '*',\n  allowHeaders: ['Content-Type', 'Authorization', 'Range'],\n  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS', 'HEAD'],\n  exposeHeaders: ['Content-Length', 'Content-Type', 'Content-Range', 'Accept-Ranges'],\n  maxAge: 600,\n  credentials: true,\n}))\n\n// API Routes\napp.get('/api/songs', async (c) => {\n  const songs = await c.env.DB.prepare('SELECT * FROM songs ORDER BY created_at DESC').all()\n  return c.json(songs.results || [])\n})\n\napp.post('/api/generate-music', async (c) => {\n  const body = await c.req.json()\n  const { prompt = 'lofi beat', customMode = false, title, tags, make_instrumental = true, model } = body\n  \n  // Prepare request for API\n  const apiBody: any = {\n    make_instrumental,\n    wait_audio: false\n  }\n  \n  // Add model if specified\n  if (model) {\n    apiBody.model = model\n  }\n  \n  if (customMode) {\n    apiBody.prompt = prompt\n    if (title) apiBody.title = title\n    if (tags) apiBody.tags = tags\n  } else {\n    apiBody.gpt_description_prompt = prompt\n  }\n  \n  console.log('Sending to Udio API:', JSON.stringify(apiBody))\n  \n  // Start generation with AI Music API\n  try {\n    const response = await fetch('https://udioapi.pro/api/v2/generate', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.UDIOAPI_KEY}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(apiBody)\n    })\n    \n    const responseText = await response.text()\n    console.log('Generate response:', responseText)\n    \n    if (!response.ok) {\n      console.error('AI Music API error:', responseText)\n      return c.json({ \n        error: 'Failed to start generation',\n        details: responseText\n      }, 500)\n    }\n    \n    let data\n    try {\n      data = JSON.parse(responseText)\n    } catch (e) {\n      return c.json({ \n        error: 'Invalid response from API',\n        details: responseText \n      }, 500)\n    }\n    \n    // Get the actual work ID from the response\n    const actualWorkId = data.workId || data.work_id || data.id || data.generation_id || data.data?.workId || data.data?.id\n    \n    if (!actualWorkId) {\n      console.error('No workId found in response:', JSON.stringify(data))\n      return c.json({ \n        error: 'No work ID in response',\n        response: data \n      }, 500)\n    }\n    \n    console.log('Got workId:', actualWorkId)\n    \n    // Create placeholders for both expected variants\n    const timestamp = new Date().toISOString()\n    const songIds = []\n    \n    // Create first variant placeholder\n    const songId1 = crypto.randomUUID()\n    songIds.push(songId1)\n    const placeholderTitle1 = customMode && title ? `${title} (Variant 1)` : `Generating: ${prompt.substring(0, 50)}... (Variant 1)`\n    \n    await c.env.DB.prepare(`\n      INSERT INTO songs (id, name, url, metadata, created_at, status)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `).bind(\n      songId1,\n      placeholderTitle1,\n      '',\n      JSON.stringify({ \n        workId: actualWorkId, \n        prompt, \n        customMode, \n        title, \n        tags, \n        status: 'generating',\n        variant: 1,\n        groupId: songId1\n      }),\n      timestamp,\n      'generating'\n    ).run()\n    \n    // Create second variant placeholder\n    const songId2 = crypto.randomUUID()\n    songIds.push(songId2)\n    const placeholderTitle2 = customMode && title ? `${title} (Variant 2)` : `Generating: ${prompt.substring(0, 50)}... (Variant 2)`\n    \n    await c.env.DB.prepare(`\n      INSERT INTO songs (id, name, url, metadata, created_at, status)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `).bind(\n      songId2,\n      placeholderTitle2,\n      '',\n      JSON.stringify({ \n        workId: actualWorkId, \n        prompt, \n        customMode, \n        title, \n        tags, \n        status: 'generating',\n        variant: 2,\n        groupId: songId1\n      }),\n      timestamp,\n      'generating'\n    ).run()\n    \n    return c.json({ \n      success: true, \n      workId: actualWorkId,\n      songIds\n    })\n  } catch (error) {\n    console.error('Generate music error:', error)\n    return c.json({ \n      error: 'Failed to generate music',\n      details: error.message \n    }, 500)\n  }\n})\n\napp.get('/api/generate-music-status', async (c) => {\n  const workId = c.req.query('workId')\n  if (!workId) {\n    return c.json({ error: 'Work ID required' }, 400)\n  }\n  \n  console.log('Checking status for workId:', workId)\n  \n  try {\n    // Check the Udio API status endpoint\n    const response = await fetch(`https://udioapi.pro/api/v2/feed?workId=${workId}`, {\n      headers: {\n        'Authorization': `Bearer ${c.env.UDIOAPI_KEY}`\n      }\n    })\n    \n    const data = await response.json()\n    console.log('API Response:', JSON.stringify(data, null, 2))\n    \n    // Check if we have response data\n    if (data && data.data && data.data.response_data && Array.isArray(data.data.response_data)) {\n      const tracks = data.data.response_data\n      console.log(`Found ${tracks.length} tracks in response`)\n      \n      // Get all DB records for this workId\n      const songs = await c.env.DB.prepare(\n        \"SELECT * FROM songs WHERE json_extract(metadata, '$.workId') = ? ORDER BY json_extract(metadata, '$.variant')\"\n      ).bind(workId).all()\n      \n      if (songs.results && songs.results.length > 0) {\n        let updatedCount = 0\n        \n        // Update each variant with its corresponding track\n        for (let i = 0; i < Math.min(tracks.length, songs.results.length); i++) {\n          const track = tracks[i]\n          const song = songs.results[i]\n          \n          if (track.audio_url) {\n            console.log(`Updating variant ${i + 1} with track:`, track.title)\n            \n            try {\n              // Download and save audio\n              const audioResponse = await fetch(track.audio_url)\n              if (audioResponse.ok) {\n                const audioBlob = await audioResponse.blob()\n                const audioKey = `songs/${song.id}.mp3`\n                \n                await c.env.R2.put(audioKey, audioBlob.stream(), {\n                  httpMetadata: { \n                    contentType: 'audio/mpeg',\n                    contentLength: audioBlob.size.toString()\n                  }\n                })\n                \n                // Update database record\n                const metadata = JSON.parse(song.metadata as string || '{}')\n                metadata.title = track.title\n                metadata.duration = track.duration\n                metadata.status = 'completed'\n                metadata.audio_url = track.audio_url\n                metadata.completedAt = new Date().toISOString()\n                \n                await c.env.DB.prepare(`\n                  UPDATE songs \n                  SET name = ?, url = ?, metadata = ?, status = 'completed'\n                  WHERE id = ?\n                `).bind(\n                  track.title + (songs.results.length > 1 ? ` (Variant ${i + 1})` : ''),\n                  `/files/${audioKey}`,\n                  JSON.stringify(metadata),\n                  song.id\n                ).run()\n                \n                updatedCount++\n              }\n            } catch (error) {\n              console.error(`Error saving variant ${i + 1}:`, error)\n            }\n          }\n        }\n        \n        if (updatedCount > 0) {\n          return c.json({ \n            status: 'completed',\n            tracksUpdated: updatedCount,\n            totalTracks: tracks.length\n          })\n        }\n      }\n    }\n    \n    // Still processing\n    return c.json({ \n      status: 'processing',\n      data: data\n    })\n  } catch (error) {\n    console.error('Status check error:', error)\n    return c.json({ \n      status: 'error',\n      error: error.message\n    })\n  }\n})\n\n// Manual refresh stuck songs\napp.post('/api/refresh-stuck', async (c) => {\n  const stuckSongs = await c.env.DB.prepare(`\n    SELECT DISTINCT json_extract(metadata, '$.workId') as workId\n    FROM songs \n    WHERE status = 'generating'\n    AND created_at < datetime('now', '-5 minutes')\n  `).all()\n  \n  let updatedCount = 0\n  const errors = []\n  \n  for (const song of stuckSongs.results || []) {\n    if (!song.workId) continue\n    \n    try {\n      const response = await fetch(`https://udioapi.pro/api/v2/feed?workId=${song.workId}`, {\n        headers: {\n          'Authorization': `Bearer ${c.env.UDIOAPI_KEY}`\n        }\n      })\n      \n      const data = await response.json()\n      \n      if (data && data.data && data.data.response_data && Array.isArray(data.data.response_data)) {\n        const tracks = data.data.response_data\n        \n        // Get all DB records for this workId\n        const songs = await c.env.DB.prepare(\n          \"SELECT * FROM songs WHERE json_extract(metadata, '$.workId') = ? ORDER BY json_extract(metadata, '$.variant')\"\n        ).bind(song.workId).all()\n        \n        if (songs.results) {\n          for (let i = 0; i < Math.min(tracks.length, songs.results.length); i++) {\n            const track = tracks[i]\n            const dbSong = songs.results[i]\n            \n            if (track.audio_url) {\n              try {\n                const audioResponse = await fetch(track.audio_url)\n                if (audioResponse.ok) {\n                  const audioBlob = await audioResponse.blob()\n                  const audioKey = `songs/${dbSong.id}.mp3`\n                  \n                  await c.env.R2.put(audioKey, audioBlob.stream(), {\n                    httpMetadata: { \n                      contentType: 'audio/mpeg',\n                      contentLength: audioBlob.size.toString()\n                    }\n                  })\n                  \n                  const metadata = JSON.parse(dbSong.metadata as string || '{}')\n                  metadata.title = track.title\n                  metadata.duration = track.duration\n                  metadata.status = 'completed'\n                  metadata.audio_url = track.audio_url\n                  metadata.completedAt = new Date().toISOString()\n                  \n                  await c.env.DB.prepare(`\n                    UPDATE songs \n                    SET name = ?, url = ?, metadata = ?, status = 'completed'\n                    WHERE id = ?\n                  `).bind(\n                    track.title + (songs.results.length > 1 ? ` (Variant ${i + 1})` : ''),\n                    `/files/${audioKey}`,\n                    JSON.stringify(metadata),\n                    dbSong.id\n                  ).run()\n                  \n                  updatedCount++\n                }\n              } catch (error) {\n                console.error(`Error updating song ${dbSong.id}:`, error)\n                errors.push({ songId: dbSong.id, error: error.message })\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(`Error checking workId ${song.workId}:`, error)\n      errors.push({ workId: song.workId, error: error.message })\n    }\n  }\n  \n  return c.json({ \n    stuckCount: stuckSongs.results?.length || 0,\n    updatedCount,\n    errors: errors.length > 0 ? errors : undefined\n  })\n})\n\n// File serving\napp.get('/files/*', async (c) => {\n  const path = c.req.path.replace('/files/', '')\n  \n  try {\n    const object = await c.env.R2.get(path)\n    \n    if (!object) {\n      return c.text('File not found', 404)\n    }\n    \n    const headers = new Headers()\n    headers.set('Content-Type', object.httpMetadata?.contentType || 'audio/mpeg')\n    headers.set('Accept-Ranges', 'bytes')\n    headers.set('Cache-Control', 'public, max-age=86400')\n    \n    if (object.size) {\n      headers.set('Content-Length', object.size.toString())\n    }\n    \n    const range = c.req.header('Range')\n    if (range) {\n      const parts = range.replace(/bytes=/, \"\").split(\"-\")\n      const start = parseInt(parts[0], 10)\n      const end = parts[1] ? parseInt(parts[1], 10) : object.size - 1\n      \n      headers.set('Content-Range', `bytes ${start}-${end}/${object.size}`)\n      headers.set('Content-Length', (end - start + 1).toString())\n      \n      return new Response(object.body, {\n        status: 206,\n        headers\n      })\n    }\n    \n    return new Response(object.body, { headers })\n  } catch (error) {\n    console.error('File serving error:', error)\n    return c.text('Error serving file', 500)\n  }\n})\n\n// Delete song\napp.delete('/api/songs/:id', async (c) => {\n  const id = c.req.param('id')\n  \n  try {\n    // Get song metadata to find related songs\n    const song = await c.env.DB.prepare('SELECT * FROM songs WHERE id = ?').bind(id).first()\n    if (!song) {\n      return c.json({ error: 'Song not found' }, 404)\n    }\n    \n    const metadata = JSON.parse(song.metadata as string || '{}')\n    const groupId = metadata.groupId\n    \n    // Delete all songs in the group if they share the same groupId\n    if (groupId) {\n      const songs = await c.env.DB.prepare(\n        \"SELECT * FROM songs WHERE json_extract(metadata, '$.groupId') = ?\"\n      ).bind(groupId).all()\n      \n      for (const s of songs.results || []) {\n        // Delete from R2\n        if (s.url) {\n          const key = s.url.replace('/files/', '')\n          await c.env.R2.delete(key)\n        }\n        \n        // Delete from DB\n        await c.env.DB.prepare('DELETE FROM songs WHERE id = ?').bind(s.id).run()\n      }\n    } else {\n      // Delete single song\n      if (song.url) {\n        const key = song.url.replace('/files/', '')\n        await c.env.R2.delete(key)\n      }\n      \n      await c.env.DB.prepare('DELETE FROM songs WHERE id = ?').bind(id).run()\n    }\n    \n    return c.json({ success: true })\n  } catch (error) {\n    console.error('Delete error:', error)\n    return c.json({ error: 'Failed to delete song' }, 500)\n  }\n})\n\n// Generate artwork using Fal.ai\napp.post('/api/artwork', async (c) => {\n  const body = await c.req.json()\n  const { prompt, style = 'lofi anime aesthetic, album cover art', numImages = 4, model = 'flux-schnell' } = body\n  \n  // Map model names to Fal.ai endpoints\n  const modelEndpoints = {\n    'flux-schnell': 'https://fal.run/fal-ai/flux/schnell',\n    'flux-dev': 'https://fal.run/fal-ai/flux/dev',\n    'flux-pro': 'https://fal.run/fal-ai/flux-pro',\n    'stable-diffusion-xl': 'https://fal.run/fal-ai/stable-diffusion-xl'\n  }\n  \n  const endpoint = modelEndpoints[model] || modelEndpoints['flux-schnell']\n  \n  try {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Key ${c.env.FAL_KEY}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: `${prompt}, ${style}, high quality, detailed`,\n        image_size: 'square_hd',\n        num_images: numImages,\n        enable_safety_checker: true\n      })\n    })\n    \n    if (!response.ok) {\n      throw new Error(`Fal.ai error: ${response.statusText}`)\n    }\n    \n    const data = await response.json()\n    const artworkIds = []\n    \n    // Save generated images\n    for (const image of data.images || []) {\n      const artworkId = crypto.randomUUID()\n      const key = `artwork/${artworkId}.png`\n      \n      // Download and save to R2\n      const imageResponse = await fetch(image.url)\n      await c.env.R2.put(key, imageResponse.body, {\n        httpMetadata: { contentType: 'image/png' }\n      })\n      \n      // Save to database\n      await c.env.DB.prepare(`\n        INSERT INTO artwork (id, url, prompt, metadata, created_at)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(\n        artworkId,\n        `/files/${key}`,\n        prompt,\n        JSON.stringify({ style, model, fal_url: image.url }),\n        new Date().toISOString()\n      ).run()\n      \n      artworkIds.push({\n        id: artworkId,\n        url: `/files/${key}`\n      })\n    }\n    \n    return c.json({ success: true, artworkIds })\n  } catch (error) {\n    console.error('Artwork generation error:', error)\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Generate video using various AI models\napp.post('/api/video', async (c) => {\n  const body = await c.req.json()\n  const { \n    imageId, \n    prompt = '', \n    model = 'kling-1.6', \n    enableLoop = false, \n    duration = 5,\n    seed = -1,\n    cfgScale = 0.5,\n    mode = 'standard',\n    tailImageId = null\n  } = body\n  \n  try {\n    // Get image URL\n    const artwork = await c.env.DB.prepare(\n      'SELECT * FROM artwork WHERE id = ?'\n    ).bind(imageId).first()\n    \n    if (!artwork) {\n      return c.json({ error: 'Artwork not found' }, 404)\n    }\n    \n    // Get full URL for the artwork\n    const origin = c.req.header('origin') || `https://${c.req.header('host')}`\n    const fullImageUrl = artwork.url.startsWith('http') ? artwork.url : `${origin}${artwork.url}`\n    \n    // Get tail image URL if provided\n    let fullTailImageUrl = null\n    if (tailImageId) {\n      const tailArtwork = await c.env.DB.prepare(\n        'SELECT * FROM artwork WHERE id = ?'\n      ).bind(tailImageId).first()\n      \n      if (tailArtwork) {\n        fullTailImageUrl = tailArtwork.url.startsWith('http') \n          ? tailArtwork.url \n          : `${origin}${tailArtwork.url}`\n      }\n    }\n    \n    console.log('Using image URL:', fullImageUrl)\n    if (fullTailImageUrl) console.log('Using tail image URL:', fullTailImageUrl)\n    \n    // Map models to endpoints and configurations\n    const modelConfigs = {\n      'kling-1.6': {\n        endpoint: mode === 'pro' \n          ? 'https://fal.run/fal-ai/kling-video/v1.6/pro/image-to-video'\n          : 'https://fal.run/fal-ai/kling-video/v1.6/image-to-video',\n        params: {\n          image_url: fullImageUrl,\n          prompt: prompt || 'smooth camera movement, cinematic',\n          duration: duration.toString(),\n          cfg_scale: cfgScale,\n          seed: seed === -1 ? Math.floor(Math.random() * 1000000) : seed,\n          ...(fullTailImageUrl && { tail_image_url: fullTailImageUrl })\n        }\n      },\n      'kling-1.5': {\n        endpoint: 'https://fal.run/fal-ai/kling-video/v1.5/image-to-video',\n        params: {\n          image_url: fullImageUrl,\n          prompt: prompt || 'smooth camera movement',\n          duration: duration.toString(),\n          cfg_scale: cfgScale,\n          seed: seed === -1 ? Math.floor(Math.random() * 1000000) : seed\n        }\n      },\n      'stable-video': {\n        endpoint: 'https://fal.run/fal-ai/stable-video-diffusion',\n        params: {\n          image_url: fullImageUrl,\n          motion_bucket_id: 127,\n          cond_aug: 0.02,\n          fps: duration <= 4 ? 6 : 10,\n          seed: Math.floor(Math.random() * 1000000)\n        }\n      },\n      'animatediff-sparsectrl': {\n        endpoint: 'https://fal.run/fal-ai/animatediff-sparsectrl-lcm',\n        params: {\n          image_url: fullImageUrl,\n          prompt: prompt || 'smooth camera movement, cinematic motion',\n          n_prompt: 'worst quality, low quality, nsfw',\n          guidance_scale: 1.2,\n          num_inference_steps: 6,\n          gif: false,\n          frames: duration * 8\n        }\n      },\n      'animatediff-lightning': {\n        endpoint: 'https://fal.run/fal-ai/animatediff-v2v',\n        params: {\n          image_url: fullImageUrl,\n          prompt: prompt || 'smooth cinematic camera movement',\n          negative_prompt: 'worst quality, low quality',\n          guidance_scale: 7.5,\n          num_inference_steps: 20,\n          video_length: duration * 8\n        }\n      }\n    }\n    \n    const config = modelConfigs[model] || modelConfigs['stable-video']\n    \n    const response = await fetch(config.endpoint, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Key ${c.env.FAL_KEY}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(config.params)\n    })\n    \n    if (!response.ok) {\n      const errorText = await response.text()\n      console.error('Video generation failed:', errorText)\n      throw new Error(`Video generation error: ${response.statusText}. ${errorText}`)\n    }\n    \n    const data = await response.json()\n    console.log('Video generation response:', data)\n    \n    // Get video URL from response\n    const videoUrl = data.video?.url || data.video_url || data.url || data.output\n    \n    if (!videoUrl) {\n      throw new Error('No video URL in response')\n    }\n    \n    const videoId = crypto.randomUUID()\n    const key = `videos/${videoId}.mp4`\n    \n    // Download and save video\n    const videoResponse = await fetch(videoUrl)\n    await c.env.R2.put(key, videoResponse.body, {\n      httpMetadata: { contentType: 'video/mp4' }\n    })\n    \n    // Save to database\n    await c.env.DB.prepare(`\n      INSERT INTO videos (id, url, artwork_id, metadata, created_at)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      videoId,\n      `/files/${key}`,\n      imageId,\n      JSON.stringify({ \n        model, \n        prompt, \n        enableLoop,\n        duration,\n        fal_url: videoUrl \n      }),\n      new Date().toISOString()\n    ).run()\n    \n    return c.json({ \n      success: true, \n      videoId,\n      url: `/files/${key}`\n    })\n  } catch (error) {\n    console.error('Video generation error:', error)\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Create album/compilation\napp.post('/api/albums', async (c) => {\n  const body = await c.req.json()\n  const { title, artist, genre, songIds, coverArtId } = body\n  \n  const albumId = crypto.randomUUID()\n  \n  // Create album record\n  await c.env.DB.prepare(`\n    INSERT INTO albums (id, title, artist, genre, cover_art_id, created_at, status)\n    VALUES (?, ?, ?, ?, ?, ?, ?)\n  `).bind(\n    albumId,\n    title,\n    artist || 'Lofi Studio',\n    genre || 'Lo-Fi Hip Hop',\n    coverArtId,\n    new Date().toISOString(),\n    'draft'\n  ).run()\n  \n  // Link songs to album\n  for (let i = 0; i < songIds.length; i++) {\n    await c.env.DB.prepare(`\n      INSERT INTO album_songs (album_id, song_id, track_number)\n      VALUES (?, ?, ?)\n    `).bind(albumId, songIds[i], i + 1).run()\n  }\n  \n  return c.json({ success: true, albumId })\n})\n\n// Prepare for DistroKid\napp.post('/api/prepare-distrokid', async (c) => {\n  const body = await c.req.json()\n  const { albumId } = body\n  \n  // Get album and songs\n  const album = await c.env.DB.prepare(\n    'SELECT * FROM albums WHERE id = ?'\n  ).bind(albumId).first()\n  \n  const songs = await c.env.DB.prepare(`\n    SELECT s.* FROM songs s\n    JOIN album_songs als ON s.id = als.song_id\n    WHERE als.album_id = ?\n    ORDER BY als.track_number\n  `).bind(albumId).all()\n  \n  // Generate DistroKid package\n  const distroPackage = {\n    album: {\n      title: album.title,\n      artist: album.artist,\n      genre: album.genre,\n      release_date: new Date().toISOString().split('T')[0],\n      label: 'Lofi Studio Records',\n      copyright: `\u2117 ${new Date().getFullYear()} ${album.artist}`,\n      upc: null // Will be assigned by DistroKid\n    },\n    tracks: [],\n    artwork: {\n      cover_art_url: album.cover_art_id ? `/files/artwork/${album.cover_art_id}.png` : null\n    },\n    platforms: {\n      spotify: true,\n      apple_music: true,\n      youtube_music: true,\n      amazon_music: true,\n      tidal: true,\n      deezer: true,\n      tiktok: true,\n      instagram: true\n    }\n  }\n  \n  // Process each track\n  for (const song of songs.results || []) {\n    const metadata = JSON.parse(song.metadata || '{}')\n    \n    distroPackage.tracks.push({\n      title: song.name,\n      duration_seconds: metadata.duration || 180,\n      isrc: null, // Will be assigned by DistroKid\n      audio_file: song.url,\n      writers: [album.artist],\n      producers: ['Lofi Studio AI'],\n      explicit: false,\n      language: 'Instrumental',\n      primary_genre: 'Hip-Hop',\n      secondary_genre: 'Electronic'\n    })\n  }\n  \n  // Save DistroKid package\n  await c.env.DB.prepare(`\n    UPDATE albums \n    SET distrokid_metadata = ?, status = 'ready_for_distribution'\n    WHERE id = ?\n  `).bind(\n    JSON.stringify(distroPackage),\n    albumId\n  ).run()\n  \n  return c.json({ \n    success: true, \n    distroPackage,\n    instructions: {\n      manual_steps: [\n        '1. Download all audio files from the URLs provided',\n        '2. Download the cover art from the URL provided',\n        '3. Log into DistroKid',\n        '4. Create new release with the metadata provided',\n        '5. Upload audio files in the correct track order',\n        '6. Upload cover art (3000x3000 recommended)',\n        '7. Select distribution platforms',\n        '8. Submit for distribution'\n      ],\n      automation_note: 'For automated distribution, integrate DistroKid API'\n    }\n  })\n})\n\n// Get all artwork\napp.get('/api/artwork', async (c) => {\n  const artwork = await c.env.DB.prepare('SELECT * FROM artwork ORDER BY created_at DESC').all()\n  return c.json(artwork.results || [])\n})\n\n// Get all albums\napp.get('/api/albums', async (c) => {\n  const albums = await c.env.DB.prepare('SELECT * FROM albums ORDER BY created_at DESC').all()\n  return c.json(albums.results || [])\n})\n\n// Get all videos\napp.get('/api/videos', async (c) => {\n  const videos = await c.env.DB.prepare('SELECT * FROM videos ORDER BY created_at DESC').all()\n  return c.json(videos.results || [])\n})\n\n// Get distribution-ready albums for desktop app\napp.get('/api/distribution/pending', async (c) => {\n  const albums = await c.env.DB.prepare(`\n    SELECT a.*, \n           (SELECT COUNT(*) FROM album_songs WHERE album_id = a.id) as track_count\n    FROM albums a \n    WHERE a.status = 'ready_for_distribution' \n    ORDER BY a.created_at DESC\n  `).all()\n  \n  return c.json(albums.results || [])\n})\n\n// Mark album as published\napp.post('/api/distribution/complete/:albumId', async (c) => {\n  const albumId = c.req.param('albumId')\n  const body = await c.req.json()\n  const { upc, platform_ids } = body\n  \n  await c.env.DB.prepare(`\n    UPDATE albums \n    SET status = 'published',\n        distrokid_metadata = json_set(\n          COALESCE(distrokid_metadata, '{}'),\n          '$.upc', ?,\n          '$.platform_ids', ?,\n          '$.published_at', ?\n        )\n    WHERE id = ?\n  `).bind(\n    upc,\n    JSON.stringify(platform_ids),\n    new Date().toISOString(),\n    albumId\n  ).run()\n  \n  return c.json({ success: true })\n})\n\n// Get album songs\napp.get('/api/albums/:albumId/songs', async (c) => {\n  const albumId = c.req.param('albumId')\n  \n  const songs = await c.env.DB.prepare(`\n    SELECT s.* FROM songs s\n    JOIN album_songs als ON s.id = als.song_id\n    WHERE als.album_id = ?\n    ORDER BY als.track_number\n  `).bind(albumId).all()\n  \n  return c.json(songs.results || [])\n})\n\n// YouTube OAuth2 endpoints\napp.get('/api/youtube/auth', async (c) => {\n  const CLIENT_ID = c.env.YOUTUBE_CLIENT_ID || 'YOUR_CLIENT_ID'\n  const REDIRECT_URI = `${c.req.url.origin}/api/youtube/callback`\n  \n  const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?` +\n    `client_id=${CLIENT_ID}&` +\n    `redirect_uri=${encodeURIComponent(REDIRECT_URI)}&` +\n    `response_type=code&` +\n    `scope=${encodeURIComponent('https://www.googleapis.com/auth/youtube.upload https://www.googleapis.com/auth/youtube')}&` +\n    `access_type=offline&` +\n    `prompt=consent`\n  \n  return c.redirect(authUrl)\n})\n\n// OAuth2 callback\napp.get('/api/youtube/callback', async (c) => {\n  const code = c.req.query('code')\n  const CLIENT_ID = c.env.YOUTUBE_CLIENT_ID\n  const CLIENT_SECRET = c.env.YOUTUBE_CLIENT_SECRET\n  const REDIRECT_URI = `${c.req.url.origin}/api/youtube/callback`\n  \n  if (!code) {\n    return c.json({ error: 'No authorization code provided' }, 400)\n  }\n  \n  try {\n    // Exchange code for tokens\n    const tokenResponse = await fetch('https://oauth2.googleapis.com/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams({\n        code,\n        client_id: CLIENT_ID,\n        client_secret: CLIENT_SECRET,\n        redirect_uri: REDIRECT_URI,\n        grant_type: 'authorization_code'\n      })\n    })\n    \n    const tokens = await tokenResponse.json()\n    \n    // Store tokens in D1 (in production, encrypt these)\n    await c.env.DB.prepare(`\n      INSERT OR REPLACE INTO youtube_auth (id, access_token, refresh_token, expires_at)\n      VALUES ('default', ?, ?, ?)\n    `).bind(\n      tokens.access_token,\n      tokens.refresh_token,\n      new Date(Date.now() + tokens.expires_in * 1000).toISOString()\n    ).run()\n    \n    // Redirect back to publish tab\n    return c.redirect('/#publish?youtube=connected')\n  } catch (error) {\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Prepare YouTube upload\napp.post('/api/youtube/prepare', async (c) => {\n  const body = await c.req.json()\n  const { albumId, apiKey, videoStyle, album, songs } = body\n  \n  try {\n    // Generate description\n    const description = `${album.title} by ${album.artist}\n    \nFull album lofi music compilation.\n\nTracklist:\n${songs.map((song, idx) => {\n  const minutes = Math.floor(idx * 3);\n  const seconds = (idx * 3) % 60;\n  return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')} - ${song.name}`;\n}).join('\\n')}\n\nCreated with Lofi Studio - AI-powered music generation\n    \n#lofi #lofihiphop #studymusic #chillbeats #relaxingmusic`\n    \n    // Generate tags\n    const tags = [\n      'lofi', 'lofi hip hop', 'study music', 'chill beats',\n      'relaxing music', 'lofi mix', 'lofi compilation',\n      album.artist.toLowerCase(), album.title.toLowerCase()\n    ]\n    \n    // Step 1: Generate video based on style\n    let videoData;\n    const origin = c.req.header('origin') || `https://${c.req.header('host')}`\n    \n    if (videoStyle === 'static' || videoStyle === 'animated') {\n      // Generate video with either static image or looping video\n      const videoGenResponse = await fetch(`${origin}/api/video/generate-static`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          albumId,\n          album,\n          songs,\n          videoStyle,\n          videoLoopId: body.videoLoopId // Optional: ID of video to loop\n        })\n      })\n      \n      if (!videoGenResponse.ok) {\n        const error = await videoGenResponse.json()\n        throw new Error(error.error || 'Failed to generate video')\n      }\n      \n      videoData = await videoGenResponse.json()\n    } else {\n      // For other styles, return instructions for manual creation\n      videoData = {\n        status: 'manual',\n        message: 'Please create video manually for this style'\n      }\n    }\n    \n    // Step 2: Create YouTube upload URL (requires OAuth2, not just API key)\n    // YouTube requires OAuth2 for uploads, not just API key\n    // We'll need to implement OAuth2 flow or use service account\n    \n    return c.json({\n      success: true,\n      description,\n      tags,\n      videoStyle,\n      title: `${album.title} - ${album.artist} [Full Album]`,\n      categoryId: '10', // Music category\n      privacyStatus: 'private', // Start as private, user can make public\n      video: videoData,\n      message: videoData.status === 'rendering' \n        ? `Video is being generated (${videoData.estimatedTime}). Check back soon!`\n        : 'YouTube upload package prepared. Use YouTube Studio to upload.',\n      oauth_url: `https://accounts.google.com/o/oauth2/v2/auth?client_id=YOUR_CLIENT_ID&redirect_uri=${encodeURIComponent(c.req.url.origin + '/api/youtube/callback')}&response_type=code&scope=https://www.googleapis.com/auth/youtube.upload&access_type=offline`\n    })\n  } catch (error) {\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Audio merge endpoint\napp.post('/api/audio/merge', async (c) => {\n  const body = await c.req.json()\n  const { albumId, songs } = body\n  \n  try {\n    // For a simple solution, we'll use an audio merging service\n    // Options: \n    // 1. Use FFmpeg via external service\n    // 2. Use Audio API services like AudioStack or Dolby.io\n    // 3. For now, we'll create a simple concatenated playlist URL\n    \n    // Check if we already have a merged file for this album\n    const existingMerge = await c.env.DB.prepare(\n      'SELECT * FROM audio_merges WHERE album_id = ? ORDER BY created_at DESC LIMIT 1'\n    ).bind(albumId).first()\n    \n    if (existingMerge && existingMerge.url) {\n      return c.json({\n        success: true,\n        url: existingMerge.url,\n        duration: existingMerge.duration,\n        cached: true\n      })\n    }\n    \n    // For JSON2Video, we can actually provide multiple audio tracks\n    // and it will merge them automatically!\n    // Create a concatenated audio manifest\n    const audioManifest = {\n      type: 'concatenated',\n      tracks: songs.map((song, index) => ({\n        url: song.url,\n        name: song.name,\n        order: index,\n        crossfade: index > 0 ? 2 : 0 // 2 second crossfade between tracks\n      }))\n    }\n    \n    // Store the manifest\n    const mergeId = crypto.randomUUID()\n    const manifestKey = `audio-merges/${albumId}/${mergeId}.json`\n    \n    await c.env.R2.put(manifestKey, JSON.stringify(audioManifest), {\n      httpMetadata: { contentType: 'application/json' }\n    })\n    \n    const manifestUrl = `/files/${manifestKey}`\n    \n    // Calculate total duration (estimate)\n    const estimatedDuration = songs.length * 180 // 3 minutes per song average\n    \n    // Store merge record\n    await c.env.DB.prepare(`\n      INSERT INTO audio_merges (id, album_id, url, duration, metadata, created_at)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `).bind(\n      mergeId,\n      albumId,\n      manifestUrl,\n      estimatedDuration,\n      JSON.stringify({ manifest: audioManifest, song_count: songs.length }),\n      new Date().toISOString()\n    ).run()\n    \n    // For actual audio merging, we'll use the first track as a placeholder\n    // JSON2Video doesn't support manifest URLs yet\n    // In production, you'd use an audio processing service here\n    const mergedUrl = songs[0]?.url || ''\n    \n    return c.json({\n      success: true,\n      url: mergedUrl, // For now, just use first track\n      duration: estimatedDuration,\n      manifest: manifestUrl,\n      message: 'Using first track as placeholder. Full merging coming soon.'\n    })\n  } catch (error) {\n    console.error('Audio merge error:', error)\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Video generation endpoint using JSON2Video\napp.post('/api/video/generate-static', async (c) => {\n  const body = await c.req.json()\n  const { albumId, album, songs, videoStyle, videoLoopId } = body\n  \n  try {\n    // Get full URLs for all audio files\n    const origin = c.req.header('origin') || `https://${c.req.header('host')}`\n    \n    // Prepare song URLs with full paths\n    const songsWithFullUrls = songs.map(s => ({\n      ...s,\n      url: s.url.startsWith('http') ? s.url : `${origin}${s.url}`\n    }))\n    \n    // Prepare background based on style\n    let background;\n    \n    if (videoStyle === 'animated' && videoLoopId) {\n      // Use a looping video as background\n      const video = await c.env.DB.prepare(\n        'SELECT * FROM videos WHERE id = ?'\n      ).bind(videoLoopId).first()\n      \n      if (video) {\n        background = {\n          type: 'video',\n          url: video.url.startsWith('http') ? video.url : `${origin}${video.url}`,\n          loop: true\n        }\n      } else {\n        // Fallback to album cover if video not found\n        background = {\n          type: 'image',\n          url: album.cover_art_id \n            ? `${origin}/files/artwork/${album.cover_art_id}.png`\n            : `${origin}/placeholder-album-art.png`,\n          zoom: 'ken-burns'\n        }\n      }\n    } else {\n      // Static mode: use album cover\n      background = {\n        type: 'image',\n        url: album.cover_art_id \n          ? `${origin}/files/artwork/${album.cover_art_id}.png`\n          : `${origin}/placeholder-album-art.png`,\n        zoom: 'ken-burns'\n      }\n    }\n    \n    // Calculate total duration (3 minutes per song)\n    const totalDuration = songs.length * 180\n    \n    // Create video with JSON2Video using multiple audio tracks\n    const json2videoResponse = await fetch('https://api.json2video.com/v2/movies', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${c.env.JSON2VIDEO_KEY || 'your-api-key'}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        template: 'basic',\n        width: 1920,\n        height: 1080,\n        duration: totalDuration,\n        scenes: [\n          {\n            comment: 'Lofi album cover with title',\n            duration: totalDuration,\n            background: background,\n            elements: [\n              {\n                type: 'text',\n                text: album.title,\n                x: '50%',\n                y: '15%',\n                fontSize: 72,\n                fontFamily: 'Montserrat',\n                fontWeight: 'bold',\n                color: '#ffffff',\n                shadow: {\n                  color: '#000000',\n                  opacity: 0.8,\n                  blur: 10\n                }\n              },\n              {\n                type: 'text',\n                text: `by ${album.artist}`,\n                x: '50%',\n                y: '25%',\n                fontSize: 36,\n                fontFamily: 'Montserrat',\n                color: '#ffffff',\n                shadow: {\n                  color: '#000000',\n                  opacity: 0.8,\n                  blur: 10\n                }\n              },\n              // Add track titles with timestamps\n              ...songs.map((song, index) => {\n                const startTime = index * 180; // 3 minutes per song\n                const minutes = Math.floor(startTime / 60);\n                const seconds = startTime % 60;\n                const timestamp = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n                \n                return {\n                  type: 'text',\n                  text: `${timestamp} - ${song.name}`,\n                  x: '10%',\n                  y: `${40 + (index * 4)}%`,\n                  fontSize: 18,\n                  fontFamily: 'Montserrat',\n                  color: '#ffffff',\n                  opacity: 0.7,\n                  start: 0,\n                  duration: totalDuration\n                };\n              }).slice(0, 10), // Limit to 10 tracks on screen\n              {\n                type: 'waveform',\n                audio: songsWithFullUrls[0].url, // Waveform from first track\n                x: '50%',\n                y: '85%',\n                width: '80%',\n                height: '15%',\n                color: '#ffffff',\n                opacity: 0.8\n              }\n            ],\n            // Stack all audio tracks - JSON2Video will play them sequentially!\n            audio: songsWithFullUrls.map((song, index) => ({\n              url: song.url,\n              start: index * 180, // Each song starts 3 minutes after the previous\n              fadeIn: index > 0 ? 1 : 2, // Fade in between tracks\n              fadeOut: index < songs.length - 1 ? 1 : 3, // Fade out between tracks\n              volume: 1.0\n            }))\n          }\n        ],\n        settings: {\n          quality: 'high',\n          format: 'mp4'\n        }\n      })\n    })\n    \n    if (!json2videoResponse.ok) {\n      const error = await json2videoResponse.text()\n      throw new Error(`JSON2Video API error: ${error}`)\n    }\n    \n    const videoData = await json2videoResponse.json()\n    \n    // Store video reference in database\n    const videoId = crypto.randomUUID()\n    await c.env.DB.prepare(`\n      INSERT INTO videos (id, url, artwork_id, metadata, created_at)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      videoId,\n      videoData.url || videoData.video_url,\n      album.id,\n      JSON.stringify({ \n        type: 'youtube-compilation',\n        duration: totalDuration,\n        json2video_id: videoData.id,\n        render_status: videoData.status || 'rendering'\n      }),\n      new Date().toISOString()\n    ).run()\n    \n    return c.json({ \n      success: true,\n      videoId,\n      videoUrl: videoData.url,\n      renderingId: videoData.id,\n      status: videoData.status || 'rendering',\n      estimatedTime: videoData.estimated_time || '2-3 minutes'\n    })\n  } catch (error) {\n    console.error('Video generation error:', error)\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// YouTube resumable upload\napp.post('/api/youtube/upload', async (c) => {\n  const body = await c.req.json()\n  const { albumId, videoKey, metadata } = body\n  \n  try {\n    // Get stored auth token\n    const auth = await c.env.DB.prepare(\n      'SELECT * FROM youtube_auth WHERE id = \"default\"'\n    ).first()\n    \n    if (!auth || new Date(auth.expires_at) < new Date()) {\n      return c.json({ error: 'YouTube authentication required' }, 401)\n    }\n    \n    // Step 1: Create video resource\n    const createResponse = await fetch('https://www.googleapis.com/youtube/v3/videos?part=snippet,status', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${auth.access_token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        snippet: {\n          title: metadata.title,\n          description: metadata.description,\n          tags: metadata.tags,\n          categoryId: '10'\n        },\n        status: {\n          privacyStatus: 'private',\n          selfDeclaredMadeForKids: false\n        }\n      })\n    })\n    \n    const videoResource = await createResponse.json()\n    \n    // Step 2: Get resumable upload URL\n    const uploadUrl = createResponse.headers.get('Location') || \n      `https://www.googleapis.com/upload/youtube/v3/videos?uploadType=resumable&upload_id=${videoResource.id}`\n    \n    // Step 3: Return upload URL for client-side resumable upload\n    return c.json({\n      success: true,\n      uploadUrl,\n      videoId: videoResource.id,\n      videoUrl: `https://youtube.com/watch?v=${videoResource.id}`\n    })\n  } catch (error) {\n    return c.json({ error: error.message }, 500)\n  }\n})\n\n// Serve React app\napp.get('/', async (c) => {\n  const html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Lofi Studio</title>\n  <script src=\"https://unpkg.com/react@18/umd/react.production.min.js\"></script>\n  <script src=\"https://unpkg.com/react-dom@18/umd/react-dom.production.min.js\"></script>\n  <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n  <style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    \n    body {\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      background: #0f0f0f;\n      color: #e0e0e0;\n      min-height: 100vh;\n    }\n    \n    .container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n    \n    .header {\n      margin-bottom: 3rem;\n    }\n    \n    .header h1 {\n      font-size: 2.5rem;\n      margin-bottom: 0.5rem;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n    \n    .header p {\n      color: #888;\n      font-size: 1.1rem;\n    }\n    \n    .main-grid {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 2rem;\n      margin-bottom: 3rem;\n    }\n    \n    @media (max-width: 768px) {\n      .main-grid {\n        grid-template-columns: 1fr;\n      }\n    }\n    \n    .card {\n      background: #1a1a1a;\n      border-radius: 12px;\n      padding: 2rem;\n      border: 1px solid #2a2a2a;\n    }\n    \n    .card h2 {\n      font-size: 1.5rem;\n      margin-bottom: 1.5rem;\n      color: #fff;\n    }\n    \n    .form-group {\n      margin-bottom: 1.5rem;\n    }\n    \n    .form-group label {\n      display: block;\n      margin-bottom: 0.5rem;\n      font-size: 0.9rem;\n      color: #bbb;\n    }\n    \n    .form-group input,\n    .form-group textarea {\n      width: 100%;\n      padding: 0.75rem;\n      background: #2a2a2a;\n      border: 1px solid #3a3a3a;\n      border-radius: 8px;\n      color: #e0e0e0;\n      font-size: 1rem;\n      transition: all 0.2s;\n    }\n    \n    .form-group input:focus,\n    .form-group textarea:focus {\n      outline: none;\n      border-color: #667eea;\n      background: #2f2f2f;\n    }\n    \n    .form-group textarea {\n      resize: vertical;\n      min-height: 80px;\n    }\n    \n    .form-group small {\n      display: block;\n      margin-top: 0.25rem;\n      color: #666;\n      font-size: 0.85rem;\n    }\n    \n    .checkbox-group {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      margin-bottom: 1.5rem;\n    }\n    \n    .checkbox-group input[type=\"checkbox\"] {\n      width: auto;\n      cursor: pointer;\n    }\n    \n    .button {\n      display: inline-block;\n      padding: 0.75rem 1.5rem;\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n      color: white;\n      border: none;\n      border-radius: 8px;\n      font-size: 1rem;\n      font-weight: 500;\n      cursor: pointer;\n      transition: all 0.3s;\n    }\n    \n    .button:hover {\n      transform: translateY(-1px);\n      box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n    }\n    \n    .button:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      transform: none;\n    }\n    \n    .button-secondary {\n      background: #2a2a2a;\n      border: 1px solid #3a3a3a;\n    }\n    \n    .button-secondary:hover {\n      background: #3a3a3a;\n      box-shadow: none;\n    }\n    \n    .music-library {\n      margin-top: 3rem;\n    }\n    \n    .library-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 2rem;\n    }\n    \n    .library-header h2 {\n      font-size: 2rem;\n      color: #fff;\n    }\n    \n    .track-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: 1.5rem;\n    }\n    \n    .track-card {\n      background: #1a1a1a;\n      border-radius: 12px;\n      padding: 1.5rem;\n      border: 1px solid #2a2a2a;\n      transition: all 0.3s;\n    }\n    \n    .track-card:hover {\n      border-color: #3a3a3a;\n      transform: translateY(-2px);\n    }\n    \n    .track-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: flex-start;\n      margin-bottom: 1rem;\n    }\n    \n    .track-title {\n      font-size: 1.1rem;\n      font-weight: 500;\n      color: #fff;\n      margin-bottom: 0.25rem;\n    }\n    \n    .track-status {\n      font-size: 0.85rem;\n      padding: 0.25rem 0.75rem;\n      border-radius: 20px;\n      background: #2a2a2a;\n      color: #888;\n    }\n    \n    .track-status.generating {\n      background: #3a3a2a;\n      color: #ffcc00;\n    }\n    \n    .track-status.completed {\n      background: #2a3a2a;\n      color: #66ff66;\n    }\n    \n    .track-meta {\n      font-size: 0.85rem;\n      color: #666;\n      margin-bottom: 1rem;\n    }\n    \n    .audio-player {\n      width: 100%;\n      margin-bottom: 1rem;\n      border-radius: 8px;\n      background: #2a2a2a;\n    }\n    \n    .track-actions {\n      display: flex;\n      gap: 0.5rem;\n    }\n    \n    .action-button {\n      padding: 0.5rem 1rem;\n      background: #2a2a2a;\n      border: 1px solid #3a3a3a;\n      border-radius: 6px;\n      color: #e0e0e0;\n      cursor: pointer;\n      transition: all 0.2s;\n      font-size: 0.9rem;\n      margin-right: 0.5rem;\n    }\n    \n    .action-button:hover {\n      background: #3a3a3a;\n    }\n    \n    .action-button.delete {\n      background: #2a1a1a;\n      border-color: #3a2a2a;\n      color: #ff6666;\n    }\n    \n    .action-button.delete:hover {\n      background: #3a2a2a;\n      color: #ff8888;\n    }\n    \n    .error-message {\n      background: #2a1a1a;\n      border: 1px solid #ff6666;\n      color: #ff9999;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-bottom: 1rem;\n    }\n    \n    .success-message {\n      background: #1a2a1a;\n      border: 1px solid #66ff66;\n      color: #99ff99;\n      padding: 1rem;\n      border-radius: 8px;\n      margin-bottom: 1rem;\n    }\n    \n    .loading {\n      display: inline-block;\n      width: 20px;\n      height: 20px;\n      border: 2px solid #3a3a3a;\n      border-top-color: #667eea;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n      margin-left: 0.5rem;\n    }\n    \n    @keyframes spin {\n      to { transform: rotate(360deg); }\n    }\n    \n    .empty-state {\n      text-align: center;\n      padding: 3rem;\n      color: #666;\n    }\n    \n    .empty-state p {\n      font-size: 1.1rem;\n      margin-bottom: 1rem;\n    }\n    \n    .tabs {\n      display: flex;\n      gap: 1rem;\n      margin-bottom: 2rem;\n      border-bottom: 1px solid #2a2a2a;\n    }\n    \n    .tab {\n      padding: 1rem 2rem;\n      background: none;\n      border: none;\n      color: #888;\n      font-size: 1.1rem;\n      cursor: pointer;\n      transition: all 0.3s;\n      border-bottom: 2px solid transparent;\n    }\n    \n    .tab:hover {\n      color: #e0e0e0;\n    }\n    \n    .tab.active {\n      color: #fff;\n      border-bottom-color: #667eea;\n    }\n    \n    .tab-content {\n      animation: fadeIn 0.3s ease-in;\n    }\n    \n    @keyframes fadeIn {\n      from { opacity: 0; }\n      to { opacity: 1; }\n    }\n    \n    .modal-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: rgba(0, 0, 0, 0.8);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n    }\n    \n    .modal {\n      background: #1a1a1a;\n      border-radius: 12px;\n      padding: 2rem;\n      max-width: 600px;\n      width: 90%;\n      max-height: 80vh;\n      overflow-y: auto;\n      border: 1px solid #2a2a2a;\n    }\n    \n    .modal h2 {\n      font-size: 1.5rem;\n      margin-bottom: 1.5rem;\n      color: #fff;\n    }\n    \n    .artwork-grid {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1rem;\n      margin-bottom: 1.5rem;\n    }\n    \n    .artwork-item {\n      cursor: pointer;\n      border: 2px solid transparent;\n      border-radius: 8px;\n      overflow: hidden;\n      transition: all 0.2s;\n    }\n    \n    .artwork-item:hover {\n      border-color: #667eea;\n    }\n    \n    .artwork-item.selected {\n      border-color: #667eea;\n    }\n    \n    .artwork-item img {\n      width: 100%;\n      height: auto;\n      display: block;\n    }\n    \n    .artwork-info {\n      padding: 0.75rem;\n      background: #1a1a1a;\n      border-top: 1px solid #2a2a2a;\n    }\n    \n    .artwork-model {\n      font-size: 0.8rem;\n      color: #999;\n      margin-bottom: 0.25rem;\n    }\n    \n    .artwork-prompt {\n      font-size: 0.85rem;\n      color: #e0e0e0;\n      margin-bottom: 0.5rem;\n      line-height: 1.3;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      display: -webkit-box;\n      -webkit-line-clamp: 2;\n      -webkit-box-orient: vertical;\n    }\n    \n    .artwork-date {\n      font-size: 0.75rem;\n      color: #666;\n    }\n    \n    .modal-actions {\n      display: flex;\n      gap: 1rem;\n      margin-top: 1.5rem;\n    }\n    \n    .track-checkbox {\n      margin-right: 0.5rem;\n    }\n  </style>\n</head>\n<body>\n  <div id=\"root\"></div>\n  \n  <script type=\"text/babel\">\n    const { useState, useEffect, useCallback } = React;\n    \n    function App() {\n      const [songs, setSongs] = useState([]);\n      const [prompt, setPrompt] = useState('');\n      const [customMode, setCustomMode] = useState(false);\n      const [title, setTitle] = useState('');\n      const [tags, setTags] = useState('');\n      const [makeInstrumental, setMakeInstrumental] = useState(true);\n      const [isGenerating, setIsGenerating] = useState(false);\n      const [error, setError] = useState('');\n      const [success, setSuccess] = useState('');\n      const [selectedSongs, setSelectedSongs] = useState(new Set());\n      const [playbackErrors, setPlaybackErrors] = useState({});\n      \n      // Tab state - get from URL hash\n      const getTabFromHash = () => {\n        const hash = window.location.hash.slice(1);\n        return ['music', 'artwork', 'distribute', 'publish'].includes(hash) ? hash : 'music';\n      };\n      \n      const [activeTab, setActiveTab] = useState(getTabFromHash());\n      \n      // Update tab when hash changes\n      useEffect(() => {\n        const handleHashChange = () => {\n          setActiveTab(getTabFromHash());\n        };\n        \n        window.addEventListener('hashchange', handleHashChange);\n        return () => window.removeEventListener('hashchange', handleHashChange);\n      }, []);\n      \n      // Custom setActiveTab that also updates URL\n      const changeTab = (tab) => {\n        window.location.hash = tab;\n        setActiveTab(tab);\n      };\n      \n      // Modal states\n      const [showArtworkModal, setShowArtworkModal] = useState(false);\n      const [showAlbumModal, setShowAlbumModal] = useState(false);\n      const [artworkPrompt, setArtworkPrompt] = useState('');\n      const [generatedArtwork, setGeneratedArtwork] = useState([]);\n      const [selectedArtwork, setSelectedArtwork] = useState(null);\n      const [albumTitle, setAlbumTitle] = useState('');\n      const [albumArtist, setAlbumArtist] = useState('');\n      const [isGeneratingArtwork, setIsGeneratingArtwork] = useState(false);\n      const [allArtwork, setAllArtwork] = useState([]);\n      const [albums, setAlbums] = useState([]);\n      const [musicModel, setMusicModel] = useState('');\n      const [artworkModel, setArtworkModel] = useState('flux-schnell');\n      const [videoModel, setVideoModel] = useState('kling-1.6');\n      const [selectedImageForVideo, setSelectedImageForVideo] = useState(null);\n      const [videoPrompt, setVideoPrompt] = useState('');\n      const [isGeneratingVideo, setIsGeneratingVideo] = useState(false);\n      const [enableLoop, setEnableLoop] = useState(true);\n      const [videos, setVideos] = useState([]);\n      const [videoDuration, setVideoDuration] = useState(5);\n      const [videoSeed, setVideoSeed] = useState(-1);\n      const [videoCfgScale, setVideoCfgScale] = useState(0.5);\n      const [videoMode, setVideoMode] = useState('standard');\n      const [tailImageUrl, setTailImageUrl] = useState('');\n      const [selectedTailImage, setSelectedTailImage] = useState(null);\n      const [mediaFilter, setMediaFilter] = useState('all');\n      const [showPublishingOptions] = useState(true); // Always show publishing options\n      \n      // YouTube publishing state\n      const [youtubeApiKey, setYoutubeApiKey] = useState('');\n      const [selectedAlbumForYT, setSelectedAlbumForYT] = useState('');\n      const [ytVideoStyle, setYtVideoStyle] = useState('static');\n      const [isPublishingToYT, setIsPublishingToYT] = useState(false);\n      const [selectedVideoLoop, setSelectedVideoLoop] = useState('');\n      \n      // Track generation status\n      const [activeGenerations, setActiveGenerations] = useState(new Map());\n      \n      const fetchSongs = useCallback(async () => {\n        try {\n          const response = await fetch('/api/songs');\n          const data = await response.json();\n          setSongs(data);\n          \n          // Check for any songs that are still generating\n          const generatingSongs = data.filter(song => song.status === 'generating');\n          const newActiveGens = new Map();\n          \n          generatingSongs.forEach(song => {\n            const metadata = JSON.parse(song.metadata || '{}');\n            if (metadata.workId) {\n              newActiveGens.set(metadata.workId, metadata.groupId || song.id);\n            }\n          });\n          \n          setActiveGenerations(newActiveGens);\n        } catch (error) {\n          console.error('Failed to fetch songs:', error);\n        }\n      }, []);\n      \n      const fetchArtwork = useCallback(async () => {\n        try {\n          const response = await fetch('/api/artwork');\n          const data = await response.json();\n          setAllArtwork(data);\n        } catch (error) {\n          console.error('Failed to fetch artwork:', error);\n        }\n      }, []);\n      \n      const fetchAlbums = useCallback(async () => {\n        try {\n          const response = await fetch('/api/albums');\n          const data = await response.json();\n          setAlbums(data);\n        } catch (error) {\n          console.error('Failed to fetch albums:', error);\n        }\n      }, []);\n      \n      useEffect(() => {\n        fetchSongs();\n        fetchArtwork();\n        fetchAlbums();\n        fetchVideos();\n        const interval = setInterval(fetchSongs, 5000);\n        return () => clearInterval(interval);\n      }, [fetchSongs, fetchArtwork, fetchAlbums]);\n      \n      // Check status of active generations\n      useEffect(() => {\n        const checkStatuses = async () => {\n          for (const [workId, groupId] of activeGenerations.entries()) {\n            try {\n              const response = await fetch(\\`/api/generate-music-status?workId=\\${workId}\\`);\n              const data = await response.json();\n              \n              if (data.status === 'completed') {\n                // Remove from active generations\n                setActiveGenerations(prev => {\n                  const newMap = new Map(prev);\n                  newMap.delete(workId);\n                  return newMap;\n                });\n                \n                // Refresh songs\n                fetchSongs();\n              }\n            } catch (error) {\n              console.error(\\`Failed to check status for \\${workId}:\\`, error);\n            }\n          }\n        };\n        \n        if (activeGenerations.size > 0) {\n          const interval = setInterval(checkStatuses, 3000);\n          return () => clearInterval(interval);\n        }\n      }, [activeGenerations, fetchSongs]);\n      \n      const generateMusic = async (e) => {\n        e.preventDefault();\n        setError('');\n        setSuccess('');\n        setIsGenerating(true);\n        \n        try {\n          const response = await fetch('/api/generate-music', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              prompt: prompt || 'lofi beat',\n              customMode,\n              title: customMode ? title : undefined,\n              tags: customMode ? tags : undefined,\n              make_instrumental: makeInstrumental,\n              model: musicModel\n            })\n          });\n          \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || 'Failed to generate music');\n          }\n          \n          setSuccess('Music generation started. Two variants will be created.');\n          setPrompt('');\n          setTitle('');\n          setTags('');\n          \n          // Add to active generations\n          if (data.workId) {\n            setActiveGenerations(prev => new Map(prev).set(data.workId, data.songIds?.[0]));\n          }\n          \n          // Refresh songs immediately\n          fetchSongs();\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsGenerating(false);\n        }\n      };\n      \n      const refreshStuck = async () => {\n        try {\n          const response = await fetch('/api/refresh-stuck', { method: 'POST' });\n          const data = await response.json();\n          \n          if (data.updatedCount > 0) {\n            setSuccess(\\`Updated \\${data.updatedCount} stuck songs\\`);\n          } else {\n            setError('No stuck songs were updated');\n          }\n          \n          fetchSongs();\n        } catch (error) {\n          setError('Failed to refresh stuck songs');\n        }\n      };\n      \n      const deleteSong = async (id) => {\n        try {\n          const response = await fetch(\\`/api/songs/\\${id}\\`, { method: 'DELETE' });\n          \n          if (response.ok) {\n            fetchSongs();\n          }\n        } catch (error) {\n          console.error('Failed to delete song:', error);\n        }\n      };\n      \n      const handlePlayError = (songId, error) => {\n        setPlaybackErrors(prev => ({\n          ...prev,\n          [songId]: 'Cannot play audio. The file may still be processing or the URL is invalid.'\n        }));\n      };\n      \n      const generateArtwork = async () => {\n        if (!artworkPrompt) {\n          setError('Please enter an artwork prompt');\n          return;\n        }\n        \n        setIsGeneratingArtwork(true);\n        setError('');\n        \n        try {\n          const response = await fetch('/api/artwork', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ \n              prompt: artworkPrompt,\n              model: artworkModel \n            })\n          });\n          \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || 'Failed to generate artwork');\n          }\n          \n          setGeneratedArtwork(data.artworkIds);\n          setSuccess('Artwork generated successfully');\n          fetchArtwork(); // Refresh artwork list\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsGeneratingArtwork(false);\n        }\n      };\n      \n      const createAlbum = async () => {\n        if (!albumTitle || selectedSongs.size === 0) {\n          setError('Please enter album title and select songs');\n          return;\n        }\n        \n        try {\n          const response = await fetch('/api/albums', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              title: albumTitle,\n              artist: albumArtist || 'Lofi Studio',\n              songIds: Array.from(selectedSongs),\n              coverArtId: selectedArtwork\n            })\n          });\n          \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || 'Failed to create album');\n          }\n          \n          // Prepare for DistroKid\n          const distroResponse = await fetch('/api/prepare-distrokid', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ albumId: data.albumId })\n          });\n          \n          const distroData = await distroResponse.json();\n          \n          setSuccess('Album created and prepared for distribution');\n          setShowAlbumModal(false);\n          setSelectedSongs(new Set());\n          \n          // Show distribution instructions\n          alert(JSON.stringify(distroData.instructions.manual_steps, null, 2));\n        } catch (error) {\n          setError(error.message);\n        }\n      };\n      \n      const toggleSongSelection = (songId) => {\n        setSelectedSongs(prev => {\n          const newSet = new Set(prev);\n          if (newSet.has(songId)) {\n            newSet.delete(songId);\n          } else {\n            newSet.add(songId);\n          }\n          return newSet;\n        });\n      };\n      \n      const generateVideo = async () => {\n        if (!selectedImageForVideo) {\n          setError('Please select an image for video generation');\n          return;\n        }\n        \n        setIsGeneratingVideo(true);\n        setError('');\n        \n        try {\n          const response = await fetch('/api/video', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              imageId: selectedImageForVideo,\n              prompt: videoPrompt,\n              model: videoModel,\n              enableLoop,\n              duration: videoDuration,\n              seed: videoSeed,\n              cfgScale: videoCfgScale,\n              mode: videoMode,\n              tailImageId: selectedTailImage\n            })\n          });\n          \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || 'Failed to generate video');\n          }\n          \n          setSuccess('Video generated successfully');\n          // Fetch videos list\n          fetchVideos();\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsGeneratingVideo(false);\n        }\n      };\n      \n      const fetchVideos = async () => {\n        try {\n          const response = await fetch('/api/videos');\n          const data = await response.json();\n          setVideos(data);\n        } catch (error) {\n          console.error('Failed to fetch videos:', error);\n        }\n      };\n      \n      const publishToYouTube = async () => {\n        if (!selectedAlbumForYT) {\n          setError('Please select an album');\n          return;\n        }\n        \n        setIsPublishingToYT(true);\n        setError('');\n        \n        try {\n          // Get album details\n          const album = albums.find(a => a.id === selectedAlbumForYT);\n          if (!album) throw new Error('Album not found');\n          \n          // Get album songs\n          const albumSongs = await fetch(\\`/api/albums/\\${selectedAlbumForYT}/songs\\`);\n          const songsData = await albumSongs.json();\n          \n          // Prepare YouTube upload\n          const response = await fetch('/api/youtube/prepare', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              albumId: selectedAlbumForYT,\n              videoStyle: ytVideoStyle,\n              videoLoopId: selectedVideoLoop,\n              album: album,\n              songs: songsData\n            })\n          });\n          \n          const data = await response.json();\n          \n          if (!response.ok) {\n            throw new Error(data.error || 'Failed to prepare YouTube upload');\n          }\n          \n          // Handle video generation response\n          if (data.video && data.video.status === 'rendering') {\n            // Video is being generated\n            setSuccess(\\`Video is being generated! \\${data.video.estimatedTime}. Video ID: \\${data.video.renderingId}\\`);\n            \n            // Store rendering ID for status checking\n            localStorage.setItem(\\`video-rendering-\\${selectedAlbumForYT}\\`, data.video.renderingId);\n          } else if (data.video && data.video.videoUrl) {\n            // Video is ready\n            setSuccess('Video generated successfully! Download link ready.');\n            \n            // Create download info with video URL\n            const uploadInfo = \\`YouTube Upload Information\n==========================\n\nTitle: \\${data.title}\n\nDescription:\n\\${data.description}\n\nTags: \\${data.tags.join(', ')}\n\nCategory: Music (ID: 10)\nPrivacy: Private (change after upload if desired)\n\nGenerated Video: \\${data.video.videoUrl}\n\nInstructions:\n1. Download the video from the link above\n2. Go to YouTube Studio (studio.youtube.com)\n3. Click \"Create\" \u2192 \"Upload videos\"\n4. Select the downloaded video\n5. Copy and paste the title, description, and tags\n6. Set category to \"Music\"\n7. Upload!\\`;\n            \n            // Create download link for instructions\n            const blob = new Blob([uploadInfo], { type: 'text/plain' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = \\`youtube-upload-\\${album.title.replace(/\\s+/g, '-')}.txt\\`;\n            a.click();\n            URL.revokeObjectURL(url);\n          } else {\n            // Manual video creation needed\n            const uploadInfo = \\`YouTube Upload Information\n==========================\n\nTitle: \\${data.title}\n\nDescription:\n\\${data.description}\n\nTags: \\${data.tags.join(', ')}\n\nCategory: Music (ID: 10)\nPrivacy: Private (change after upload if desired)\n\nManual Video Creation Required\nVideo Style: \\${ytVideoStyle}\n\nInstructions:\n1. Create video using your preferred editor\n2. Use album artwork and audio files\n3. Export as MP4 (1920x1080)\n4. Upload to YouTube Studio with above metadata\\`;\n            \n            const blob = new Blob([uploadInfo], { type: 'text/plain' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = \\`youtube-upload-\\${album.title.replace(/\\s+/g, '-')}.txt\\`;\n            a.click();\n            URL.revokeObjectURL(url);\n          }\n          \n          setSuccess('YouTube upload package downloaded! Check your downloads folder.');\n        } catch (error) {\n          setError(error.message);\n        } finally {\n          setIsPublishingToYT(false);\n        }\n      };\n      \n      // Group songs by their groupId\n      const groupedSongs = songs.reduce((groups, song) => {\n        const metadata = JSON.parse(song.metadata || '{}');\n        const groupId = metadata.groupId || song.id;\n        \n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        groups[groupId].push(song);\n        return groups;\n      }, {});\n      \n      return (\n        <div className=\"container\">\n          <header className=\"header\">\n            <h1>Lofi Studio</h1>\n            <p>Create AI-powered lofi music compilations</p>\n          </header>\n          \n          <div className=\"tabs\">\n            <button \n              className={'tab' + (activeTab === 'music' ? ' active' : '')}\n              onClick={() => changeTab('music')}\n            >\n              Music\n            </button>\n            <button \n              className={'tab' + (activeTab === 'artwork' ? ' active' : '')}\n              onClick={() => changeTab('artwork')}\n            >\n              Artwork\n            </button>\n            <button \n              className={'tab' + (activeTab === 'distribute' ? ' active' : '')}\n              onClick={() => changeTab('distribute')}\n            >\n              Distribute\n            </button>\n            <button \n              className={'tab' + (activeTab === 'publish' ? ' active' : '')}\n              onClick={() => changeTab('publish')}\n            >\n              Publish\n            </button>\n          </div>\n          \n          <div className=\"tab-content\">\n            {activeTab === 'music' && (\n              <div>\n                <div className=\"main-grid\">\n                  <div className=\"card\">\n                    <h2>Generate Music</h2>\n                    <form onSubmit={generateMusic}>\n                {error && <div className=\"error-message\">{error}</div>}\n                {success && <div className=\"success-message\">{success}</div>}\n                \n                      <div className=\"form-group\">\n                        <label htmlFor=\"musicModel\">AI Model</label>\n                        <select \n                          id=\"musicModel\"\n                          value={musicModel}\n                          onChange={(e) => setMusicModel(e.target.value)}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"\">Default Model</option>\n                          <option value=\"chirp-v3.5\">Chirp v3.5 (Latest)</option>\n                          <option value=\"chirp-v3\">Chirp v3</option>\n                          <option value=\"chirp-v2\">Chirp v2</option>\n                        </select>\n                        <small>Different models have different characteristics</small>\n                      </div>\n                      \n                      <div className=\"checkbox-group\">\n                        <input\n                          type=\"checkbox\"\n                          id=\"customMode\"\n                          checked={customMode}\n                          onChange={(e) => setCustomMode(e.target.checked)}\n                        />\n                        <label htmlFor=\"customMode\">Custom Mode (Advanced)</label>\n                      </div>\n                \n                {!customMode ? (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"prompt\">Describe your lofi beat</label>\n                    <textarea\n                      id=\"prompt\"\n                      value={prompt}\n                      onChange={(e) => setPrompt(e.target.value)}\n                      placeholder=\"e.g., chill lofi beat with rain sounds and vinyl crackle\"\n                    />\n                    <small>AI will generate a title and appropriate tags</small>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"title\">Title</label>\n                      <input\n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        placeholder=\"e.g., Midnight Rain\"\n                      />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label htmlFor=\"customPrompt\">Custom Prompt</label>\n                      <textarea\n                        id=\"customPrompt\"\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                        placeholder=\"e.g., lofi hip hop beat, chill, mellow, nostalgic\"\n                      />\n                      <small>Describe the style and mood</small>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                      <label htmlFor=\"tags\">Tags</label>\n                      <input\n                        type=\"text\"\n                        id=\"tags\"\n                        value={tags}\n                        onChange={(e) => setTags(e.target.value)}\n                        placeholder=\"e.g., chill, study, relaxing\"\n                      />\n                      <small>Comma-separated tags</small>\n                    </div>\n                  </>\n                )}\n                \n                <div className=\"checkbox-group\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"instrumental\"\n                    checked={makeInstrumental}\n                    onChange={(e) => setMakeInstrumental(e.target.checked)}\n                  />\n                  <label htmlFor=\"instrumental\">Instrumental only</label>\n                </div>\n                \n                <button type=\"submit\" className=\"button\" disabled={isGenerating}>\n                  {isGenerating ? (\n                    <>Generating<span className=\"loading\"></span></>\n                  ) : (\n                    'Generate Music'\n                  )}\n                </button>\n              </form>\n            </div>\n            \n            <div className=\"card\">\n              <h2>Quick Actions</h2>\n              <p style={{ marginBottom: '1.5rem', color: '#888' }}>\n                Create artwork, albums, and prepare for distribution\n              </p>\n              \n              <p style={{ fontSize: '0.9rem', color: '#666' }}>\n                Generate music first, then create albums and artwork\n              </p>\n            </div>\n                  </div>\n                  \n                  <section className=\"music-library\">\n                    <div className=\"library-header\">\n                      <h2>Music Library</h2>\n                    </div>\n                    \n                    {/* Filter Bar */}\n                    <div style={{ \n                      display: 'flex', \n                      alignItems: 'center', \n                      gap: '1rem', \n                      marginBottom: '1.5rem',\n                      padding: '1rem',\n                      background: '#1a1a1a',\n                      borderRadius: '8px',\n                      border: '1px solid #2a2a2a'\n                    }}>\n                      <div style={{ flex: 1 }}>\n                        <strong>Filter:</strong>\n                        <span style={{ marginLeft: '1rem', color: '#888' }}>\n                          {songs.filter(s => s.status === 'generating').length} generating, \n                          {' '}{songs.filter(s => s.status === 'completed').length} completed,\n                          {' '}{songs.length} total\n                        </span>\n                      </div>\n                      <button \n                        className=\"button button-secondary\"\n                        onClick={refreshStuck}\n                        style={{ padding: '0.5rem 1rem' }}\n                      >\n                        Refresh Stuck Songs\n                      </button>\n                    </div>\n                    \n                    {songs.length === 0 ? (\n                      <div className=\"empty-state\">\n                        <p>No tracks yet. Generate your first lofi beat!</p>\n                      </div>\n                    ) : (\n                      <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                        <thead>\n                          <tr style={{ borderBottom: '1px solid #2a2a2a' }}>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Select</th>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Title</th>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Status</th>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Created</th>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Player</th>\n                            <th style={{ padding: '1rem', textAlign: 'left' }}>Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {songs.map((song) => {\n                            const metadata = JSON.parse(song.metadata || '{}');\n                            return (\n                              <tr key={song.id} style={{ borderBottom: '1px solid #1a1a1a' }}>\n                                <td style={{ padding: '1rem' }}>\n                                  {song.status === 'completed' && (\n                                    <input\n                                      type=\"checkbox\"\n                                      checked={selectedSongs.has(song.id)}\n                                      onChange={() => toggleSongSelection(song.id)}\n                                    />\n                                  )}\n                                </td>\n                                <td style={{ padding: '1rem' }}>{song.name}</td>\n                                <td style={{ padding: '1rem' }}>\n                                  <span className={'track-status ' + song.status}>\n                                    {song.status}\n                                  </span>\n                                </td>\n                                <td style={{ padding: '1rem' }}>\n                                  {new Date(song.created_at).toLocaleString()}\n                                </td>\n                                <td style={{ padding: '1rem' }}>\n                                  {song.status === 'completed' && song.url && (\n                                    <>\n                                      {playbackErrors[song.id] && (\n                                        <div style={{ \n                                          fontSize: '0.85rem', \n                                          color: '#ff6666'\n                                        }}>\n                                          {playbackErrors[song.id]}\n                                        </div>\n                                      )}\n                                      <audio \n                                        controls \n                                        style={{ width: '200px' }}\n                                        onError={(e) => handlePlayError(song.id, e)}\n                                        onCanPlay={() => {\n                                          setPlaybackErrors(prev => {\n                                            const newErrors = {...prev};\n                                            delete newErrors[song.id];\n                                            return newErrors;\n                                          });\n                                        }}\n                                      >\n                                        <source src={song.url} type=\"audio/mpeg\" />\n                                      </audio>\n                                    </>\n                                  )}\n                                </td>\n                                <td style={{ padding: '1rem' }}>\n                                  {song.status === 'completed' && song.url && (\n                                    <button \n                                      className=\"action-button\"\n                                      onClick={() => window.open(song.url, '_blank')}\n                                    >\n                                      Download\n                                    </button>\n                                  )}\n                                  <button \n                                    className=\"action-button delete\"\n                                    onClick={() => deleteSong(song.id)}\n                                  >\n                                    Delete\n                                  </button>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    )}\n                  </section>\n                </div>\n              )}\n              \n              {activeTab === 'artwork' && (\n                <div>\n                  <div className=\"main-grid\">\n                    <div className=\"card\">\n                      <h2>Generate Image</h2>\n                      {error && <div className=\"error-message\">{error}</div>}\n                      {success && <div className=\"success-message\">{success}</div>}\n                      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"artworkModel\">AI Model</label>\n                        <select \n                          id=\"artworkModel\"\n                          value={artworkModel}\n                          onChange={(e) => setArtworkModel(e.target.value)}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"flux-schnell\">FLUX Schnell (Fast)</option>\n                          <option value=\"flux-dev\">FLUX Dev (Quality)</option>\n                          <option value=\"flux-pro\">FLUX Pro (Best)</option>\n                          <option value=\"stable-diffusion-xl\">Stable Diffusion XL</option>\n                        </select>\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Describe your album artwork</label>\n                        <textarea\n                          value={artworkPrompt}\n                          onChange={(e) => setArtworkPrompt(e.target.value)}\n                          placeholder=\"e.g., cozy bedroom with rain on window, lofi aesthetic, anime style\"\n                        />\n                      </div>\n                      \n                      <button \n                        className=\"button\"\n                        onClick={generateArtwork}\n                        disabled={isGeneratingArtwork}\n                      >\n                        {isGeneratingArtwork ? 'Generating...' : 'Generate Image'}\n                      </button>\n                    </div>\n                    \n                    <div className=\"card\">\n                      <h2>Generate Video from Image</h2>\n                      {error && <div className=\"error-message\">{error}</div>}\n                      \n                      <div className=\"form-group\">\n                        <label htmlFor=\"videoModel\">Video Model</label>\n                        <select \n                          id=\"videoModel\"\n                          value={videoModel}\n                          onChange={(e) => setVideoModel(e.target.value)}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"kling-1.6\">Kling 1.6 Pro (Best quality, supports loop)</option>\n                          <option value=\"kling-1.5\">Kling 1.5</option>\n                          <option value=\"stable-video\">Stable Video Diffusion</option>\n                          <option value=\"animatediff-sparsectrl\">AnimateDiff SparseCtrl</option>\n                          <option value=\"animatediff-lightning\">AnimateDiff Lightning</option>\n                        </select>\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Motion Prompt (optional)</label>\n                        <textarea\n                          value={videoPrompt}\n                          onChange={(e) => setVideoPrompt(e.target.value)}\n                          placeholder=\"e.g., gentle zoom in with floating particles, smooth camera movement\"\n                        />\n                        <small>Describe the motion you want in the video</small>\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Duration (seconds)</label>\n                        <select \n                          value={videoDuration}\n                          onChange={(e) => setVideoDuration(Number(e.target.value))}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value={5}>5 seconds</option>\n                          {(videoModel === 'kling-1.6' || videoModel === 'kling-1.5') && (\n                            <option value={10}>10 seconds</option>\n                          )}\n                        </select>\n                        <small>Kling models support 5 or 10 second videos</small>\n                      </div>\n                      \n                      {(videoModel === 'kling-1.6' || videoModel === 'kling-1.5') && (\n                        <>\n                          <div className=\"form-group\">\n                            <label>Mode</label>\n                            <select \n                              value={videoMode}\n                              onChange={(e) => setVideoMode(e.target.value)}\n                              style={{ \n                                width: '100%',\n                                padding: '0.75rem',\n                                background: '#2a2a2a',\n                                border: '1px solid #3a3a3a',\n                                borderRadius: '8px',\n                                color: '#e0e0e0'\n                              }}\n                            >\n                              <option value=\"standard\">Standard</option>\n                              <option value=\"pro\">Pro (Higher quality)</option>\n                            </select>\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>CFG Scale</label>\n                            <input\n                              type=\"number\"\n                              value={videoCfgScale}\n                              onChange={(e) => setVideoCfgScale(parseFloat(e.target.value))}\n                              min=\"0\"\n                              max=\"1\"\n                              step=\"0.1\"\n                              style={{ \n                                width: '100%',\n                                padding: '0.75rem',\n                                background: '#2a2a2a',\n                                border: '1px solid #3a3a3a',\n                                borderRadius: '8px',\n                                color: '#e0e0e0'\n                              }}\n                            />\n                            <small>Controls adherence to prompt (0-1, default 0.5)</small>\n                          </div>\n                          \n                          <div className=\"form-group\">\n                            <label>Seed (optional)</label>\n                            <input\n                              type=\"number\"\n                              value={videoSeed}\n                              onChange={(e) => setVideoSeed(parseInt(e.target.value))}\n                              placeholder=\"-1 for random\"\n                              style={{ \n                                width: '100%',\n                                padding: '0.75rem',\n                                background: '#2a2a2a',\n                                border: '1px solid #3a3a3a',\n                                borderRadius: '8px',\n                                color: '#e0e0e0'\n                              }}\n                            />\n                            <small>Use -1 for random seed</small>\n                          </div>\n                          \n                          {videoModel === 'kling-1.6' && (\n                            <div className=\"form-group\">\n                              <label>Tail Image for Seamless Loop (optional)</label>\n                              {selectedTailImage ? (\n                                <div style={{ display: 'flex', gap: '1rem', alignItems: 'center' }}>\n                                  <div className=\"artwork-item\" style={{ width: '100px' }}>\n                                    <img src={allArtwork.find(a => a.id === selectedTailImage)?.url} alt=\"Tail image\" />\n                                  </div>\n                                  <button \n                                    type=\"button\"\n                                    className=\"button button-secondary\"\n                                    onClick={() => setSelectedTailImage(null)}\n                                  >\n                                    Remove\n                                  </button>\n                                </div>\n                              ) : (\n                                <div>\n                                  <p style={{ fontSize: '0.85rem', color: '#666', marginBottom: '0.5rem' }}>\n                                    Select a tail image from your artwork to create a perfect loop\n                                  </p>\n                                  <div style={{ display: 'flex', gap: '0.5rem', overflowX: 'auto' }}>\n                                    {allArtwork.slice(0, 5).map((art) => (\n                                      <div \n                                        key={art.id}\n                                        className=\"artwork-item\"\n                                        onClick={() => setSelectedTailImage(art.id)}\n                                        style={{ width: '80px', cursor: 'pointer', flexShrink: 0 }}\n                                      >\n                                        <img src={art.url} alt=\"Tail option\" />\n                                      </div>\n                                    ))}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </>\n                      )}\n                      \n                      <div className=\"form-group\">\n                        <label>Select Image</label>\n                        {selectedImageForVideo ? (\n                          <div className=\"artwork-item\" style={{ width: '150px' }}>\n                            <img src={allArtwork.find(a => a.id === selectedImageForVideo)?.url} alt=\"Selected\" />\n                          </div>\n                        ) : (\n                          <p>Select an image from below</p>\n                        )}\n                      </div>\n                      \n                      <button \n                        className=\"button\"\n                        onClick={generateVideo}\n                        disabled={isGeneratingVideo || !selectedImageForVideo}\n                      >\n                        {isGeneratingVideo ? 'Generating Video...' : 'Generate Video'}\n                      </button>\n                    </div>\n                  </div>\n                  \n                  <section className=\"music-library\">\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1.5rem' }}>\n                      <h2>Media Library</h2>\n                      <div style={{ display: 'flex', gap: '0.5rem' }}>\n                        <button \n                          className={'button' + (mediaFilter === 'all' ? '' : ' button-secondary')}\n                          onClick={() => setMediaFilter('all')}\n                          style={{ padding: '0.5rem 1rem' }}\n                        >\n                          All\n                        </button>\n                        <button \n                          className={'button' + (mediaFilter === 'images' ? '' : ' button-secondary')}\n                          onClick={() => setMediaFilter('images')}\n                          style={{ padding: '0.5rem 1rem' }}\n                        >\n                          Images\n                        </button>\n                        <button \n                          className={'button' + (mediaFilter === 'videos' ? '' : ' button-secondary')}\n                          onClick={() => setMediaFilter('videos')}\n                          style={{ padding: '0.5rem 1rem' }}\n                        >\n                          Videos\n                        </button>\n                      </div>\n                    </div>\n                    \n                    {mediaFilter !== 'videos' && allArtwork.length === 0 && (\n                      <div className=\"empty-state\">\n                        <p>No artwork yet. Generate your first album cover!</p>\n                      </div>\n                    )}\n                    \n                    {mediaFilter !== 'videos' && allArtwork.length > 0 && (\n                      <>\n                        <h3 style={{ marginBottom: '1rem', color: '#bbb' }}>Images</h3>\n                        <div className=\"artwork-grid\" style={{ gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', marginBottom: '2rem' }}>\n                          {allArtwork.map((art) => (\n                          <div \n                            key={art.id} \n                            className={'artwork-item' + (selectedImageForVideo === art.id ? ' selected' : '')}\n                            onClick={() => setSelectedImageForVideo(art.id)}\n                            style={{ cursor: 'pointer' }}\n                          >\n                            <img src={art.url} alt=\"Artwork\" />\n                            <div className=\"artwork-info\">\n                              <div style={{ marginBottom: '0.5rem' }}>\n                                <div style={{ fontSize: '0.85rem', fontWeight: 'bold' }}>Artwork</div>\n                                <div className=\"artwork-model\">\n                                  {(() => {\n                                    const metadata = JSON.parse(art.metadata || '{}');\n                                    const modelMap = {\n                                      'flux-schnell': 'FLUX Schnell',\n                                      'flux-dev': 'FLUX Dev',\n                                      'flux-pro': 'FLUX Pro',\n                                      'stable-diffusion-xl': 'Stable Diffusion XL'\n                                    };\n                                    return modelMap[metadata.model] || metadata.model || 'Unknown model';\n                                  })()}\n                                </div>\n                              </div>\n                              <div className=\"artwork-prompt\" title={art.prompt}>\n                                {art.prompt ? (art.prompt.length > 50 ? art.prompt.substring(0, 50) + '...' : art.prompt) : 'No prompt'}\n                              </div>\n                              <div className=\"artwork-date\">\n                                {new Date(art.created_at).toLocaleDateString()}\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                        </div>\n                      </>\n                    )}\n                    \n                    {mediaFilter !== 'images' && videos.length > 0 && (\n                      <>\n                        <h3 style={{ marginBottom: '1rem', color: '#bbb' }}>Videos</h3>\n                        <div className=\"track-grid\">\n                          {videos.map((video) => (\n                          <div key={video.id} className=\"track-card\">\n                            <video \n                              controls \n                              loop={JSON.parse(video.metadata || '{}').enableLoop}\n                              style={{ width: '100%', borderRadius: '8px' }}\n                            >\n                              <source src={video.url} type=\"video/mp4\" />\n                            </video>\n                            <div style={{ padding: '1rem' }}>\n                              <p style={{ fontSize: '0.9rem', color: '#666' }}>\n                                {new Date(video.created_at).toLocaleDateString()}\n                              </p>\n                              <button \n                                className=\"action-button\"\n                                onClick={() => window.open(video.url, '_blank')}\n                              >\n                                Download\n                              </button>\n                            </div>\n                          </div>\n                          ))}\n                        </div>\n                      </>\n                    )}\n                  </section>\n                </div>\n              )}\n              \n              {activeTab === 'distribute' && (\n                <div>\n                  <div className=\"main-grid\">\n                    <div className=\"card\">\n                      <h2>Create Album for DistroKid</h2>\n                      <div className=\"form-group\">\n                        <label>Album Title</label>\n                        <input\n                          type=\"text\"\n                          value={albumTitle}\n                          onChange={(e) => setAlbumTitle(e.target.value)}\n                          placeholder=\"e.g., Midnight Vibes Vol. 1\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Artist Name</label>\n                        <input\n                          type=\"text\"\n                          value={albumArtist}\n                          onChange={(e) => setAlbumArtist(e.target.value)}\n                          placeholder=\"e.g., Lofi Studio\"\n                        />\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Selected Tracks</label>\n                        <p>{selectedSongs.size} tracks selected</p>\n                        {selectedSongs.size > 0 ? (\n                          <div style={{ marginTop: '0.5rem', fontSize: '0.85rem', color: '#888' }}>\n                            {songs.filter(s => selectedSongs.has(s.id)).map(s => s.name).join(', ')}\n                          </div>\n                        ) : (\n                          <small>Go to Music tab to select tracks</small>\n                        )}\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Album Artwork</label>\n                        {selectedArtwork ? (\n                          <div className=\"artwork-item\" style={{ width: '150px' }}>\n                            <img src={allArtwork.find(a => a.id === selectedArtwork)?.url} alt=\"Selected artwork\" />\n                          </div>\n                        ) : (\n                          <p>Select artwork below</p>\n                        )}\n                      </div>\n                      \n                      <button \n                        className=\"button\"\n                        onClick={createAlbum}\n                        disabled={!albumTitle || selectedSongs.size === 0}\n                      >\n                        Create Album & Prepare for DistroKid\n                      </button>\n                      \n                      <div style={{ marginTop: '1rem' }}>\n                        <button \n                          className=\"button\"\n                          disabled\n                          style={{ opacity: 0.6 }}\n                        >\n                          Auto-Publish to DistroKid (Requires Desktop App)\n                        </button>\n                        <p style={{ fontSize: '0.85rem', color: '#666', marginTop: '0.5rem' }}>\n                          Download Musikai desktop app for automated publishing\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"card\">\n                      <h2>Select Artwork</h2>\n                      <div className=\"artwork-grid\">\n                        {allArtwork.slice(0, 4).map((art) => (\n                          <div \n                            key={art.id}\n                            className={'artwork-item' + (selectedArtwork === art.id ? ' selected' : '')}\n                            onClick={() => setSelectedArtwork(art.id)}\n                            style={{ cursor: 'pointer' }}\n                          >\n                            <img src={art.url} alt=\"Artwork option\" />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <section className=\"music-library\">\n                    <h2>Published Albums</h2>\n                    {albums.length === 0 ? (\n                      <div className=\"empty-state\">\n                        <p>No albums published yet</p>\n                      </div>\n                    ) : (\n                      <div className=\"track-grid\">\n                        {albums.map((album) => (\n                          <div key={album.id} className=\"track-card\">\n                            <h3>{album.title}</h3>\n                            <p>by {album.artist}</p>\n                            <p>{album.status}</p>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </section>\n                </div>\n              )}\n              \n              {activeTab === 'publish' && (\n                <div>\n                  <div className=\"main-grid\">\n                    <div className=\"card\">\n                      <h2>Publish to YouTube</h2>\n                      <p style={{ marginBottom: '1.5rem', color: '#888' }}>\n                        Upload your albums and tracks to YouTube Music and YouTube\n                      </p>\n                      \n                      <div className=\"form-group\">\n                        <label>Select Album</label>\n                        <select \n                          value={selectedAlbumForYT}\n                          onChange={(e) => setSelectedAlbumForYT(e.target.value)}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"\">Select an album to publish</option>\n                          {albums.filter(a => a.status === 'ready_for_distribution' || a.status === 'published').map(album => (\n                            <option key={album.id} value={album.id}>{album.title} by {album.artist}</option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Video Style</label>\n                        <select \n                          value={ytVideoStyle}\n                          onChange={(e) => setYtVideoStyle(e.target.value)}\n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"static\">Static Image with Audio Visualizer</option>\n                          <option value=\"animated\">Animated Loop Video</option>\n                        </select>\n                      </div>\n                      \n                      {ytVideoStyle === 'animated' && (\n                        <div className=\"form-group\">\n                          <label>Select Loop Video</label>\n                          <select \n                            value={selectedVideoLoop}\n                            onChange={(e) => setSelectedVideoLoop(e.target.value)}\n                            style={{ \n                              width: '100%',\n                              padding: '0.75rem',\n                              background: '#2a2a2a',\n                              border: '1px solid #3a3a3a',\n                              borderRadius: '8px',\n                              color: '#e0e0e0'\n                            }}\n                          >\n                            <option value=\"\">Select a video to loop</option>\n                            {videos.map(video => (\n                              <option key={video.id} value={video.id}>\n                                Video generated on {new Date(video.created_at).toLocaleDateString()}\n                              </option>\n                            ))}\n                          </select>\n                          <small>This video will loop for the entire duration of the album</small>\n                        </div>\n                      )}\n                      \n                      <div className=\"form-group\">\n                        <label>Publishing Method</label>\n                        <div style={{ \n                          display: 'flex', \n                          flexDirection: 'column', \n                          gap: '1rem',\n                          marginTop: '1rem' \n                        }}>\n                          <button \n                            className=\"button\"\n                            onClick={() => publishToYouTube()}\n                            disabled={!selectedAlbumForYT || isPublishingToYT}\n                          >\n                            {isPublishingToYT ? 'Preparing...' : 'Generate Upload Package'}\n                          </button>\n                          \n                          <button \n                            className=\"button button-secondary\"\n                            onClick={() => window.open('https://studio.youtube.com', '_blank')}\n                          >\n                            Open YouTube Studio\n                          </button>\n                        </div>\n                        \n                        <p style={{ fontSize: '0.85rem', color: '#666', marginTop: '1rem' }}>\n                          YouTube requires OAuth2 authentication for automated uploads. \n                          Click \"Generate Upload Package\" to prepare your video metadata, \n                          then upload manually via YouTube Studio.\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"card\">\n                      <h2>Publish to TikTok</h2>\n                      <p style={{ marginBottom: '1.5rem', color: '#888' }}>\n                        Create short clips and publish to TikTok\n                      </p>\n                      \n                      <div className=\"form-group\">\n                        <label>Select Track</label>\n                        <select \n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"\">Select a track</option>\n                          {songs.filter(s => s.status === 'completed').map(song => (\n                            <option key={song.id} value={song.id}>{song.name}</option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      <div className=\"form-group\">\n                        <label>Clip Duration</label>\n                        <select \n                          style={{ \n                            width: '100%',\n                            padding: '0.75rem',\n                            background: '#2a2a2a',\n                            border: '1px solid #3a3a3a',\n                            borderRadius: '8px',\n                            color: '#e0e0e0'\n                          }}\n                        >\n                          <option value=\"15\">15 seconds</option>\n                          <option value=\"30\">30 seconds</option>\n                          <option value=\"60\">60 seconds</option>\n                        </select>\n                      </div>\n                      \n                      <button className=\"button\" disabled>\n                        Connect TikTok Account (Coming Soon)\n                      </button>\n                      \n                      <p style={{ fontSize: '0.9rem', color: '#666', marginTop: '1rem' }}>\n                        TikTok API integration will be available soon\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <section className=\"music-library\">\n                    <h2>Publishing History</h2>\n                    <div className=\"empty-state\">\n                      <p>No content published yet. Connect your accounts to start publishing.</p>\n                    </div>\n                  </section>\n                </div>\n              )}\n            </div>\n          \n        </div>\n      );\n    }\n    \n    ReactDOM.render(<App />, document.getElementById('root'));\n  </script>\n</body>\n</html>`\n  \n  return c.html(html)\n})\n\nexport default app", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/worker-variants-fix.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/worker-variants-fix.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/.wrangler/tmp/bundle-6UpQyK/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/.wrangler/tmp/bundle-6UpQyK/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/jeremycai/Projects/lofi-music/lofi-studio/.wrangler/tmp/bundle-6UpQyK/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["raw", "app", "Node", "Node", "Hono", "Hono"]
}
